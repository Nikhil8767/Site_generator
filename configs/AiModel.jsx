const {
    GoogleGenerativeAI,
    HarmCategory,
    HarmBlockThreshold,
  } = require("@google/generative-ai");
  
  const apiKey = process.env.NEXT_PUBLIC_GEMINI_API_KEY;
  const genAI = new GoogleGenerativeAI(apiKey);
  
  const model = genAI.getGenerativeModel({
    model: "gemini-2.0-flash",
  });
  
  const generationConfig = {
    temperature: 1,
    topP: 0.95,
    topK: 40,
    maxOutputTokens: 8192,
    responseMimeType: "text/plain",
  };

  const CodeGenerationConfig = {
    temperature: 1,
    topP: 0.95,
    topK: 40,
    maxOutputTokens: 8192,
    responseMimeType: "application/json",
  };
  

    export const chatSession = model.startChat({
      generationConfig,
      history: [
      ],
    });
  

    export const GenAiCode=model.startChat({
      generationConfig:CodeGenerationConfig,
      history: [
        {
          role: "user",
          parts: [
            {text: "Generate a Project in React. Create multiple components, organizing them in separate folders with filenames using the .js extension, if needed. The output should use Tailwind CSS for styling, \nwithout any third-party dependencies or libraries, except for icons from the lucide-react library, which should only be used when necessary. Available icons include: Heart, Shield, Clock, Users, Play, Home, Search, Menu, User, Settings, Mail, Bell, Calendar, Star, Upload, Download, Trash, Edit, Plus, Minus, Check, X, and ArrowRight. For example, you can import an icon as import { Heart } from \"lucide-react\" and use it in JSX as <Heart className=\"\" />.\nalso you can use date-fns for date format and react-chartjs-2 chart, graph library\n\nReturn the response in JSON format with the following schema:\n{\n  \"projectTitle\": \"\",\n  \"explanation\": \"\",\n  \"files\": {\n    \"/App.js\": {\n      \"code\": \"\"\n    },\n    ...\n  },\n  \"generatedFiles\": []\n}\n\nHereâ€™s the reformatted and improved version of your prompt:\n\nGenerate a programming code structure for a React project using Vite. Create multiple components, organizing them in separate folders with filenames using the .js extension, if needed. The output should use Tailwind CSS for styling, without any third-party dependencies or libraries, except for icons from the lucide-react library, which should only be used when necessary. Available icons include: Heart, Shield, Clock, Users, Play, Home, Search, Menu, User, Settings, Mail, Bell, Calendar, Star, Upload, Download, Trash, Edit, Plus, Minus, Check, X, and ArrowRight. For example, you can import an icon as import { Heart } from \"lucide-react\" and use it in JSX as <Heart className=\"\" />.\n\nReturn the response in JSON format with the following schema:\n\njson\nCopy code\n{\n  \"projectTitle\": \"\",\n  \"explanation\": \"\",\n  \"files\": {\n    \"/App.js\": {\n      \"code\": \"\"\n    },\n    ...\n  },\n  \"generatedFiles\": []\n}\nEnsure the files field contains all created files, and the generatedFiles field lists all the filenames. Each file's code should be included in the code field, following this example:\nfiles:{\n  \"/App.js\": {\n    \"code\": \"import React from 'react';\\nimport './styles.css';\\nexport default function App() {\\n  return (\\n    <div className='p-4 bg-gray-100 text-center'>\\n      <h1 className='text-2xl font-bold text-blue-500'>Hello, Tailwind CSS with Sandpack!</h1>\\n      <p className='mt-2 text-gray-700'>This is a live code editor.</p>\\n    </div>\\n  );\\n}\"\n  }\n}\n  Additionally, include an explanation of the project's structure, purpose, and functionality in the explanation field. Make the response concise and clear in one paragraph.\n  - When asked then only use this package to import, here are some packages available to import and use (date-fns,react-chartjs-2,\"firebase\",\"@google/generative-ai\" ) only when it required\n  \n  - For placeholder images, please use a https://archive.org/download/placeholder-image/placeholder-image.jpg\n  -Add Emoji icons whenever needed to give good user experinence\n  - all designs I ask you to make, have them be beautiful, not cookie cutter. Make webpages that are fully featured and worthy for production.\n\n- By default, this template supports JSX syntax with Tailwind CSS classes, React hooks, and Lucide React for icons. Do not install other packages for UI themes, icons, etc unless absolutely necessary or I request them.\n\n- Use icons from lucide-react for logos.\n\n- Use stock photos from unsplash where appropriate, only valid URLs you know exist. Do not download the images, only link to them in image tags.\n  "},
          ],
        },
        {
          role: "model",
          parts: [
            {text: "```json\n{\n  \"projectTitle\": \"Dashboard Application\",\n  \"explanation\": \"This project is a simple dashboard application built with React and styled with Tailwind CSS. It includes components for navigation, user profile, a data table, and a simple chart. It uses lucide-react for icons and date-fns for date formatting in the user profile component. The purpose is to demonstrate a basic React project structure using functional components, Tailwind CSS for styling, and demonstrates common dashboard elements such as data visualization and user information. It has a beautiful design with emoji icons for a better user experience.\",\n  \"files\": {\n    \"/App.js\": {\n      \"code\": \"import React from 'react';\\nimport Navbar from './components/Navbar/Navbar';\\nimport Dashboard from './components/Dashboard/Dashboard';\\nimport './App.css';\\n\\nfunction App() {\\n  return (\\n    <div className=\\\"bg-gray-100 min-h-screen\\\">\\n      <Navbar />\\n      <Dashboard />\\n    </div>\\n  );\\n}\\n\\nexport default App;\"\n    },\n    \"/components/Navbar/Navbar.js\": {\n      \"code\": \"import React from 'react';\\nimport { Home, Menu, Search, User } from 'lucide-react';\\n\\nfunction Navbar() {\\n  return (\\n    <nav className=\\\"bg-white shadow-md py-4 px-6 flex items-center justify-between\\\">\\n      <div className=\\\"flex items-center\\\">\\n        <Home className=\\\"mr-2 text-blue-500\\\" />\\n        <span className=\\\"font-bold text-lg\\\">Dashboard ðŸš€</span>\\n      </div>\\n\\n      <div className=\\\"flex items-center\\\">\\n        <div className=\\\"relative mr-4\\\">\\n          <input\\n            type=\\\"text\\\"\\n            placeholder=\\\"Search...\\\"\\n            className=\\\"px-4 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring focus:ring-blue-200\\\"\\n          />\\n          <Search className=\\\"absolute top-2 right-2 text-gray-400\\\" />\\n        </div>\\n        <User className=\\\"ml-4 text-gray-600\\\" />\\n      </div>\\n    </nav>\\n  );\\n}\\n\\nexport default Navbar;\"\n    },\n    \"/components/Dashboard/Dashboard.js\": {\n      \"code\": \"import React from 'react';\\nimport UserProfile from './UserProfile/UserProfile';\\nimport DataGrid from './DataGrid/DataGrid';\\nimport ChartComponent from './ChartComponent/ChartComponent';\\n\\nfunction Dashboard() {\\n  return (\\n    <div className=\\\"container mx-auto mt-8\\\">\\n      <div className=\\\"grid grid-cols-1 md:grid-cols-3 gap-6\\\">\\n        <div className=\\\"md:col-span-1\\\">\\n          <UserProfile />\\n        </div>\\n        <div className=\\\"md:col-span-2\\\">\\n          <ChartComponent />\\n        </div>\\n      </div>\\n\\n      <div className=\\\"mt-8\\\">\\n        <DataGrid />\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default Dashboard;\"\n    },\n    \"/components/UserProfile/UserProfile.js\": {\n      \"code\": \"import React from 'react';\\nimport { Calendar, Mail, Settings } from 'lucide-react';\\nimport { format } from 'date-fns';\\n\\nfunction UserProfile() {\\n  const user = {\\n    name: 'John Doe',\\n    email: 'john.doe@example.com',\\n    joinedDate: new Date(),\\n    profileImage: 'https://archive.org/download/placeholder-image/placeholder-image.jpg'\\n  };\\n\\n  return (\\n    <div className=\\\"bg-white shadow-md rounded-md p-6\\\">\\n      <div className=\\\"flex items-center justify-center\\\">\\n        <img\\n          src={user.profileImage}\\n          alt=\\\"User Profile\\\"\\n          className=\\\"rounded-full w-24 h-24 object-cover\\\"\\n        />\\n      </div>\\n      <h2 className=\\\"text-xl font-semibold mt-4 text-center\\\">{user.name}</h2>\\n      <div className=\\\"mt-4\\\">\\n        <div className=\\\"flex items-center mb-2\\\">\\n          <Mail className=\\\"mr-2 text-gray-500\\\" />\\n          <span>{user.email}</span>\\n        </div>\\n        <div className=\\\"flex items-center mb-2\\\">\\n          <Calendar className=\\\"mr-2 text-gray-500\\\" />\\n          <span>Joined: {format(user.joinedDate, 'MMMM d, yyyy')}</span>\\n        </div>\\n      </div>\\n      <div className=\\\"mt-4 flex justify-center\\\">\\n        <button className=\\\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\\\">\\n          <Settings className=\\\"inline-block mr-2 align-middle\\\" />\\n          Edit Profile\\n        </button>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default UserProfile;\"\n    },\n    \"/components/DataGrid/DataGrid.js\": {\n      \"code\": \"import React from 'react';\\nimport { Trash, Edit } from 'lucide-react';\\n\\nfunction DataGrid() {\\n  const data = [\\n    { id: 1, name: 'Item 1', description: 'Description 1' },\\n    { id: 2, name: 'Item 2', description: 'Description 2' },\\n    { id: 3, name: 'Item 3', description: 'Description 3' }\\n  ];\\n\\n  return (\\n    <div className=\\\"bg-white shadow-md rounded-md overflow-x-auto\\\">\\n      <table className=\\\"min-w-full leading-normal\\\">\\n        <thead>\\n          <tr>\\n            <th className=\\\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\\\">\\n              ID\\n            </th>\\n            <th className=\\\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\\\">\\n              Name\\n            </th>\\n            <th className=\\\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\\\">\\n              Description\\n            </th>\\n            <th className=\\\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\\\">\\n              Actions\\n            </th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          {data.map(item => (\\n            <tr key={item.id}>\\n              <td className=\\\"px-5 py-5 border-b border-gray-200 bg-white text-sm\\\">\\n                {item.id}\\n              </td>\\n              <td className=\\\"px-5 py-5 border-b border-gray-200 bg-white text-sm\\\">\\n                {item.name}\\n              </td>\\n              <td className=\\\"px-5 py-5 border-b border-gray-200 bg-white text-sm\\\">\\n                {item.description}\\n              </td>\\n              <td className=\\\"px-5 py-5 border-b border-gray-200 bg-white text-sm\\\">\\n                <div className=\\\"flex items-center\\\">\\n                  <button className=\\\"text-blue-500 hover:text-blue-700 mr-2\\\">\\n                    <Edit className=\\\"inline-block align-middle\\\" />\\n                  </button>\\n                  <button className=\\\"text-red-500 hover:text-red-700\\\">\\n                    <Trash className=\\\"inline-block align-middle\\\" />\\n                  </button>\\n                </div>\\n              </td>\\n            </tr>\\n          ))}\\n        </tbody>\\n      </table>\\n    </div>\\n  );\\n}\\n\\nexport default DataGrid;\"\n    },\n    \"/components/ChartComponent/ChartComponent.js\": {\n      \"code\": \"import React from 'react';\\nimport { Bar } from 'react-chartjs-2';\\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\\n\\nChartJS.register(\\n  CategoryScale,\\n  LinearScale,\\n  BarElement,\\n  Title,\\n  Tooltip,\\n  Legend\\n);\\n\\nfunction ChartComponent() {\\n  const data = {\\n    labels: ['January', 'February', 'March', 'April', 'May', 'June'],\\n    datasets: [\\n      {\\n        label: 'Sales',\\n        data: [65, 59, 80, 81, 56, 55],\\n        backgroundColor: 'rgba(75,192,192,0.2)',\\n        borderColor: 'rgba(75,192,192,1)',\\n        borderWidth: 1,\\n      },\\n    ],\\n  };\\n\\n  const options = {\\n    responsive: true,\\n    plugins: {\\n      title: {\\n        display: true,\\n        text: 'Monthly Sales Data',\\n      },\\n    },\\n  };\\n\\n  return <Bar data={data} options={options} />; \\n}\\n\\nexport default ChartComponent;\"\n    },\n     \"/App.css\": {\n      \"code\": \"/* App.css */\\n\\n.App {\\n  text-align: center;\\n  padding: 20px;\\n}\\n\\n.dashboard-container {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\n.user-profile {\\n  margin-bottom: 20px;\\n  padding: 15px;\\n  border: 1px solid #ddd;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n}\\n\\n.user-image {\\n  width: 100px;\\n  height: 100px;\\n  border-radius: 50%;\\n  margin-bottom: 10px;\\n}\\n\\n.data-table {\\n  width: 100%;\\n  border-collapse: collapse;\\n  margin-top: 20px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n}\\n\\n.data-table th,\\n.data-table td {\\n  border: 1px solid #ddd;\\n  padding: 8px;\\n  text-align: left;\\n}\\n\\n.data-table th {\\n  background-color: #f0f0f0;\\n}\\n\\n.data-table tr:nth-child(even) {\\n  background-color: #f9f9f9;\\n}\"\n    }\n  },\n  \"generatedFiles\": [\n    \"/App.js\",\n    \"/components/Navbar/Navbar.js\",\n    \"/components/Dashboard/Dashboard.js\",\n    \"/components/UserProfile/UserProfile.js\",\n    \"/components/DataGrid/DataGrid.js\",\n    \"/components/ChartComponent/ChartComponent.js\",\n    \"/App.css\"\n  ]\n}\n```"},
          ],
        },
      ],
    })

  
